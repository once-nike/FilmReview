<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nike.douye.mapper.FilmMapper">
    <sql id="queryFilms">
        select film_thing.id,film_name as filmName,film_director as filmDirector,
            film_writer as filmWriter, film_actor as filmActor,film_date as filmDate,
            film_length as filmLength,film_introduction as filmIntroduction,
            film_picture as filmPicture,film_isnew as isNew
        from film_thing
    </sql>
    <sql id="queryFilmInformation">
        select film_thing.id,film_type as filmType,film_country as filmCountry,
            film_language as filmLanguage
        from film_thing
    </sql>
    <insert id="insertFilm">
        insert into
        film_thing(film_name,film_director,film_writer,film_actor,film_type,film_country,film_language,
        film_date,film_length,film_introduction,film_picture,film_isnew)
        values(#{filmDTO.filmName},#{filmDTO.filmDirector},#{filmDTO.filmWriter},#{filmDTO.filmActor},
               #{filmInformation.filmType},#{filmInformation.filmCountry},#{filmInformation.filmLanguage},
               #{filmDTO.filmDate},#{filmDTO.filmLength},#{filmDTO.filmIntroduction},#{filmDTO.filmPicture},
               #{filmDTO.isNew})
    </insert>

    <update id="updateFilm">
        update film_thing set
        film_name = #{filmDTO.filmName}, film_director = #{filmDTO.filmDirector},
        film_writer = #{filmDTO.filmWriter}, film_actor = #{filmDTO.filmActor},
        film_type = #{filmInformation.filmType}, film_country = #{filmInformation.filmCountry},
        film_language = #{filmInformation.filmLanguage}, film_date = #{filmDTO.filmDate},
        film_length = #{filmDTO.filmLength}, film_introduction = #{filmDTO.filmIntroduction},
        film_picture = #{filmDTO.filmPicture}, film_isnew = #{filmDTO.isNew}
        where id = #{filmDTO.id}
    </update>

    <!--查询-->
    <!--查询所有电影的基本信息-->
    <select id="queryAllFilms" resultType="com.nike.douye.dto.FilmDTO">
        <include refid="queryFilms"></include>
        ,score s
        where s.film_id = film_thing.id
        order by s.score_total desc
    </select>
    <!--查询所有电影的类别、国家、语言-->
    <select id="queryInformationOfAllFilm" resultType="com.nike.douye.entity.FilmInformation">
        <include refid="queryFilmInformation"></include>
        ,score s
        where s.film_id = film_thing.id
        order by s.score_total desc
    </select>

    <!--根据电影名查询-->
    <select id="queryFilmByFilmName" resultType="com.nike.douye.dto.FilmDTO">
        <include refid="queryFilms"></include>
        where id not in (0)
        <if test="filmName != null">
        and film_name like CONCAT('%',#{filmName},'%')
        </if>
    </select>

    <select id="queryInformationOfFilm" resultType="com.nike.douye.entity.FilmInformation">
       <include refid="queryFilmInformation"></include>
        where id not in (0)
        <if test="filmName != null">
            and film_name like CONCAT('%',#{filmName},'%')
        </if>
    </select>

    <select id="queryFilmByIsNew" resultType="com.nike.douye.dto.FilmDTO">
        <include refid="queryFilms"></include>
        ,score s
        where s.film_id = film_thing.id
        and film_thing.film_isnew = #{isNew}
        order by s.score_total desc
    </select>

    <select id="queryInformationOfFilmByIsNew" resultType="com.nike.douye.entity.FilmInformation">
        <include refid="queryFilmInformation"></include>
        ,score s
        where s.film_id = film_thing.id
        and film_thing.film_isnew = #{isNew}
        order by s.score_total desc
    </select>

    <select id="queryFilmByType" resultType="com.nike.douye.dto.FilmDTO" parameterType="com.nike.douye.entity.FilmInformation">
        <include refid="queryFilms"></include>
        where id not in (0)
        <if test="filmType != null">
            and film_type like CONCAT('%',#{filmType},'%')
        </if>
        <if test="filmCountry != null">
            and film_country like CONCAT('%',#{filmCountry},'%')
        </if>
        <if test="filmLanguage != null">
            and film_language like CONCAT('%',#{filmLanguage},'%')
        </if>
    </select>

    <select id="queryInformationOfFilmByType" resultType="com.nike.douye.entity.FilmInformation" parameterType="com.nike.douye.entity.FilmInformation">
        <include refid="queryFilmInformation"></include>
        where id not in (0)
        <if test="filmType != null">
        and film_type like CONCAT('%',#{filmType},'%')
        </if>
        <if test="filmCountry != null">
            and film_country like CONCAT('%',#{filmCountry},'%')
        </if>
        <if test="filmLanguage != null">
            and film_language like CONCAT('%',#{filmLanguage},'%')
        </if>
    </select>

    <select id="queryFilmIdByFilmName" resultType="int">
        select id from film_thing
        where film_name = #{filmName}
    </select>

    <insert id="insertScore">
        insert into score(film_id)
        values (#{filmId})
    </insert>

    <insert id="insertCollection">
        insert into user_film_collection(user_id,film_id)
        values (#{userId},#{filmId})
    </insert>

    <select id="queryCollectionByUserId" resultType="com.nike.douye.dto.FilmDTO">
        select ft.id,ft.film_name as filmName,ft.film_director as filmDirector,
            ft.film_writer as filmWriter, ft.film_actor as filmActor,ft.film_date as filmDate,
            ft.film_length as filmLength,ft.film_introduction as filmIntroduction,
            ft.film_picture as filmPicture,ft.film_isnew as isNew
        from film_thing ft,user_film_collection ufc
        where ufc.user_id = #{userId}
        and ufc.film_id = ft.id
        order by ufc.create_time desc
    </select>

    <select id="queryCollectionTypesByUserId" resultType="com.nike.douye.entity.FilmInformation">
        select ft.id,ft.film_type as filmType,ft.film_country as filmCountry,
            ft.film_language as filmLanguage
        from film_thing ft,user_film_collection ufc
        where ufc.user_id = #{userId}
        and ufc.film_id = ft.id
        order by ufc.create_time desc
    </select>

    <delete id="deleteCollection">
        delete from user_film_collection
        where film_id = #{filmId}
        and user_id = #{userId}
    </delete>
</mapper>